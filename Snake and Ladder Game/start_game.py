#!/usr/bin/env python3
"""
–ì–ª–∞–≤–µ–Ω starter script –∑–∞ WebRTC P2P Snake & Ladder –∏–≥—Ä–∞
–ê–≤—Ç–æ–º–∞—Ç—Å–∫–∏ –≥–∏ –ø—Ä–æ–≤–µ—Ä—É–≤–∞ –∑–∞–≤–∏—Å–Ω–æ—Å—Ç–∏—Ç–µ –∏ —Å—Ç–∞—Ä—Ç—É–≤–∞ —Å–æ–æ–¥–≤–µ—Ç–Ω–∏—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
"""

import sys
import subprocess
import importlib
import threading
import time
import os
from pathlib import Path


def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ Python –≤–µ—Ä–∑–∏—ò–∞—Ç–∞ –µ —Å–æ–æ–¥–≤–µ—Ç–Ω–∞"""
    if sys.version_info < (3, 8):
        print("‚ùå –ì—Ä–µ—à–∫–∞: –ü–æ—Ç—Ä–µ–±–Ω–∞ –µ Python 3.8 –∏–ª–∏ –ø–æ–≤–∏—Å–æ–∫–æ")
        print(f"   –í–∞—à–∞—Ç–∞ –≤–µ—Ä–∑–∏—ò–∞: {sys.version}")
        return False
    return True


def check_and_install_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∏ –∏ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞—ò –≥–∏ –ø–æ—Ç—Ä–µ–±–Ω–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"""
    required_packages = {
        'aiortc': 'aiortc==1.6.0',
        'websockets': 'websockets==12.0',
        'PIL': 'Pillow==10.1.0'
    }

    missing_packages = []

    for package, pip_name in required_packages.items():
        try:
            importlib.import_module(package)
            print(f"‚úÖ {package} - –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω")
        except ImportError:
            print(f"‚ùå {package} - –Ω–µ –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω")
            missing_packages.append(pip_name)

    if missing_packages:
        print("\nüì¶ –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–º –ø–æ—Ç—Ä–µ–±–Ω–∏ –ø–∞–∫–µ—Ç–∏...")
        try:
            subprocess.check_call([
                                      sys.executable, "-m", "pip", "install"
                                  ] + missing_packages)
            print("‚úÖ –°–∏—Ç–µ –ø–∞–∫–µ—Ç–∏ —Å–µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–∏ —É—Å–ø–µ—à–Ω–æ!")
            return True
        except subprocess.CalledProcessError:
            print("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞—ö–µ. –û–±–∏–¥–µ—Ç–µ —Å–µ —Ä–∞—á–Ω–æ:")
            print(f"   pip install {' '.join(missing_packages)}")
            return False

    return True


def check_required_files():
    """–ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å–∏—Ç–µ –ø–æ—Ç—Ä–µ–±–Ω–∏ —Ñ–∞–π–ª–æ–≤–∏ –ø–æ—Å—Ç–æ—ò–∞—Ç"""
    required_files = [
        'webrtc_signaling_server.py',
        'webrtc_client.py',
        'webrtc_game_client.py',
        'webrtc_snake_ladder_game.py'
    ]

    missing_files = []
    for file in required_files:
        if not os.path.exists(file):
            missing_files.append(file)
        else:
            print(f"‚úÖ {file}")

    if missing_files:
        print(f"\n‚ùå –ù–µ–¥–æ—Å—Ç–∞—Å—É–≤–∞–∞—Ç —Ñ–∞–π–ª–æ–≤–∏: {', '.join(missing_files)}")
        return False

    return True


def start_signaling_server():
    """–°—Ç–∞—Ä—Ç–∞—ò signaling —Å–µ—Ä–≤–µ—Ä –≤–æ background"""
    try:
        import subprocess
        process = subprocess.Popen([
            sys.executable, 'webrtc_signaling_server.py'
        ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

        # –ß–µ–∫–∞—ò –º–∞–ª–∫—É –¥–∞ —Å–µ —Å—Ç–∞—Ä—Ç—É–≤–∞
        time.sleep(2)

        # –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å√® —É—Ä–µ–¥
        if process.poll() is None:  # –°√® —É—Ä–µ–¥ —Ä–∞–±–æ—Ç–∏
            print("‚úÖ Signaling —Å–µ—Ä–≤–µ—Ä —Å—Ç–∞—Ä—Ç—É–≤–∞–Ω (PID: {})".format(process.pid))
            return process
        else:
            print("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—É–≤–∞—ö–µ –Ω–∞ signaling —Å–µ—Ä–≤–µ—Ä")
            return None

    except Exception as e:
        print(f"‚ùå –ù–µ–º–æ–∂–µ –¥–∞ —Å–µ —Å—Ç–∞—Ä—Ç—É–≤–∞ signaling —Å–µ—Ä–≤–µ—Ä: {e}")
        return None


def start_game_client():
    """–°—Ç–∞—Ä—Ç–∞—ò –∏–≥—Ä–∞ –∫–ª–∏–µ–Ω—Ç"""
    try:
        import webrtc_game_client
        client = webrtc_game_client.WebRTCGameClient()
        print("üéÆ –ò–≥—Ä–∞ –∫–ª–∏–µ–Ω—Ç —Å—Ç–∞—Ä—Ç—É–≤–∞–Ω!")
        client.run()
        return True
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—É–≤–∞—ö–µ –Ω–∞ –∏–≥—Ä–∞ –∫–ª–∏–µ–Ω—Ç: {e}")
        return False


def show_menu():
    """–ü—Ä–∏–∫–∞–∂–∏ –≥–ª–∞–≤–Ω–æ –º–µ–Ω–∏ –∑–∞ –∏–∑–±–æ—Ä –Ω–∞ –Ω–∞—á–∏–Ω –Ω–∞ —Å—Ç–∞—Ä—Ç—É–≤–∞—ö–µ"""
    print("\n" + "=" * 50)
    print("üêç WebRTC P2P Snake & Ladder –∏–≥—Ä–∞")
    print("=" * 50)
    print()
    print("–ò–∑–±–µ—Ä–µ—Ç–µ –æ–ø—Ü–∏—ò–∞:")
    print("1. –°—Ç–∞—Ä—Ç–∞—ò –∏–≥—Ä–∞ —Å–æ –∞–≤—Ç–æ–º–∞—Ç—Å–∫–∏ signaling —Å–µ—Ä–≤–µ—Ä")
    print("2. –°—Ç–∞—Ä—Ç–∞—ò —Å–∞–º–æ –∏–≥—Ä–∞ –∫–ª–∏–µ–Ω—Ç (signaling —Å–µ—Ä–≤–µ—Ä –≤–µ—ú–µ —Ä–∞–±–æ—Ç–∏)")
    print("3. –°—Ç–∞—Ä—Ç–∞—ò —Å–∞–º–æ signaling —Å–µ—Ä–≤–µ—Ä")
    print("4. –ü–æ–∫—Ä–µ–Ω–∏ unit —Ç–µ—Å—Ç–æ–≤–∏")
    print("5. –ò–∑–ª–µ–∑")
    print()

    while True:
        try:
            choice = input("–í–Ω–µ—Å–µ—Ç–µ –∏–∑–±–æ—Ä (1-5): ").strip()

            if choice == "1":
                print("\nüöÄ –°—Ç–∞—Ä—Ç—É–≤–∞–º –∫–æ–º–ø–ª–µ—Ç–Ω–∞ –∏–≥—Ä–∞...")
                signaling_process = start_signaling_server()
                if signaling_process:
                    try:
                        start_game_client()
                    finally:
                        print("\nüõë –ó–∞—Ç–≤–æ—Ä–∞–º signaling —Å–µ—Ä–≤–µ—Ä...")
                        signaling_process.terminate()
                        signaling_process.wait()
                break

            elif choice == "2":
                print("\nüéÆ –°—Ç–∞—Ä—Ç—É–≤–∞–º –∏–≥—Ä–∞ –∫–ª–∏–µ–Ω—Ç...")
                start_game_client()
                break

            elif choice == "3":
                print("\nüì° –°—Ç–∞—Ä—Ç—É–≤–∞–º signaling —Å–µ—Ä–≤–µ—Ä...")
                print("–ü—Ä–∏—Ç–∏—Å–Ω–µ—Ç–µ Ctrl+C –∑–∞ –¥–∞ –∑–∞—Å—Ç–∞–Ω–µ—Ç–µ")
                try:
                    import webrtc_signaling_server
                    import asyncio
                    asyncio.run(webrtc_signaling_server.start_signaling_server())
                except KeyboardInterrupt:
                    print("\nüõë Signaling —Å–µ—Ä–≤–µ—Ä –∑–∞—Å—Ç–∞–Ω–∞—Ç")
                break

            elif choice == "4":
                print("\nüß™ –ü–æ–∫—Ä–µ–Ω—É–≤–∞–º unit —Ç–µ—Å—Ç–æ–≤–∏...")
                try:
                    import test_webrtc_snake_ladder
                    test_webrtc_snake_ladder.run_tests()
                except ImportError:
                    print("‚ùå test_webrtc_snake_ladder.py –Ω–µ –µ –Ω–∞—ò–¥–µ–Ω")
                except Exception as e:
                    print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–æ–≤–∏—Ç–µ: {e}")
                break

            elif choice == "5":
                print("üëã –î–æ–≤–∏–¥—É–≤–∞—ö–µ!")
                break

            else:
                print("‚ùå –ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–∑–±–æ—Ä. –í–Ω–µ—Å–µ—Ç–µ 1-5.")

        except KeyboardInterrupt:
            print("\n\nüëã –î–æ–≤–∏–¥—É–≤–∞—ö–µ!")
            break
        except Exception as e:
            print(f"‚ùå –ì—Ä–µ—à–∫–∞: {e}")


def main():
    """–ì–ª–∞–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—ò–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—É–≤–∞–º —Å–∏—Å—Ç–µ–º—Å–∫–∏ –±–∞—Ä–∞—ö–∞...")

    # –ü—Ä–æ–≤–µ—Ä–∏ Python –≤–µ—Ä–∑–∏—ò–∞
    if not check_python_version():
        return

    # –ü—Ä–æ–≤–µ—Ä–∏ —Ñ–∞–π–ª–æ–≤–∏
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä—É–≤–∞–º –ø–æ—Ç—Ä–µ–±–Ω–∏ —Ñ–∞–π–ª–æ–≤–∏...")
    if not check_required_files():
        return

    # –ü—Ä–æ–≤–µ—Ä–∏ –∏ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞—ò –∑–∞–≤–∏—Å–Ω–æ—Å—Ç–∏
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä—É–≤–∞–º Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∏...")
    if not check_and_install_dependencies():
        return

    print("\n‚úÖ –°–∏—Ç–µ –±–∞—Ä–∞—ö–∞ —Å–µ –∏—Å–ø–æ–ª–Ω–µ—Ç–∏!")

    # –ü—Ä–∏–∫–∞–∂–∏ –º–µ–Ω–∏
    show_menu()


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüëã –ü—Ä–æ–≥—Ä–∞–º–æ—Ç –µ –ø—Ä–µ–∫–∏–Ω–∞—Ç –æ–¥ –∫–æ—Ä–∏—Å–Ω–∏–∫–æ—Ç")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ—á–µ–∫—É–≤–∞–Ω–∞ –≥—Ä–µ—à–∫–∞: {e}")
        print("üí° –ü—Ä–æ–≤–µ—Ä–µ—Ç–µ –¥–∞–ª–∏ —Å–∏—Ç–µ —Ñ–∞–π–ª–æ–≤–∏ —Å–µ –ø—Ä–∞–≤–∏–ª–Ω–æ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–∏")